name: Continous Integration

# Run this workflow every time a new commit pushed to your repository
on:
  push:
    # branches: 
    #   - master
  pull_request:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  docs:
    name: Build and check documentation
    runs-on: ubuntu-18.04
    steps: 
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6

      - name: Upgrade Pip
        run: python -m pip install --upgrade pip setuptools wheel
   
      - name: Install apt package dependencies
        run: |
          # Install OpenEnclave 0.12.0
          echo 'deb [arch=amd64] https://download.01.org/intel-sgx/sgx_repo/ubuntu bionic main' | sudo tee /etc/apt/sources.list.d/intel-sgx.list
          wget -qO - https://download.01.org/intel-sgx/sgx_repo/ubuntu/intel-sgx-deb.key | sudo apt-key add -
          echo "deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-7 main" | sudo tee /etc/apt/sources.list.d/llvm-toolchain-bionic-7.list
          wget -qO - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
          echo "deb [arch=amd64] https://packages.microsoft.com/ubuntu/18.04/prod bionic main" | sudo tee /etc/apt/sources.list.d/msprod.list
          wget -qO - https://packages.microsoft.com/keys/microsoft.asc | sudo apt-key add -

          sudo apt update
          sudo apt -y install clang-7 libssl-dev gdb libsgx-enclave-common libsgx-enclave-common-dev libprotobuf10 libsgx-dcap-ql libsgx-dcap-ql-dev az-dcap-client open-enclave=0.12.0 enchant

          # CMake
          wget https://github.com/Kitware/CMake/releases/download/v3.15.6/cmake-3.15.6-Linux-x86_64.sh

          # Mbed TLS
          sudo apt-get install -y libmbedtls-dev

      - name: Build C++
        run: | 
          # Build C++ source
          cd src
          mkdir build
          cd build
          cmake ..
          make -j4

      - name: Install Python dependencies
        run: |
          pip install numpy pandas sklearn numproto grpcio grpcio-tools requests
          pip install furo numpydoc sphinx==3.0.3 sphinx-argparse sphinx-copybutton sphinxcontrib-spelling

      - name: Install Secure XGBoost Python package
        run: |
          # Install the Python package
          cd python-package
          python setup.py install

      - name: Build docs
        run: |
          cd docs
          make html

      - name: Run spellcheck
        run : |
            cd docs
            sphinx-build -b spelling . _build
